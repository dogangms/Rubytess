<div class="animated-background"></div>
<style>
.back-button-container {
    padding: 1.5rem 2.5rem;
    position: relative;
    z-index: 10;
    margin-bottom: 1rem;
}

.back-button {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.85rem 1.75rem;
    background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0.05));
    border-radius: 2.5rem;
    color: #fff;
    text-decoration: none;
    font-weight: 600;
    font-size: 1.1rem;
    letter-spacing: 0.5px;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid rgba(255,255,255,0.15);
    backdrop-filter: blur(12px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.back-button:hover {
    background: linear-gradient(135deg, rgba(255,255,255,0.15), rgba(255,255,255,0.1));
    transform: translateX(-8px);
    box-shadow: 0 6px 20px rgba(0,0,0,0.15);
}

.back-button i {
    font-size: 1.3rem;
    transition: transform 0.4s ease;
}

.back-button:hover i {
    transform: translateX(-3px);
}
</style>

<!-- Sidebar -->
<div class="sidebar">
  <div class="logo">
    <div class="logo-container">
      <i class="bi bi-gem-fill"></i>
      <span>Rubytes</span>
      <div class="logo-badge">
        <i class="bi bi-code-slash"></i>
      </div>
    </div>
  </div>
  
  <style>
  .logo-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    position: relative;
  }

  .logo-badge {
    position: absolute;
    right: -18px;
    top: -8px;
    background: linear-gradient(135deg, #4C1D95, #6D28D9);
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transform: scale(0);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 0 20px rgba(139, 92, 246, 0.5);
  }

  .logo-badge i {
    font-size: 0.9rem !important;
    color: #fff !important;
    filter: none !important;
    animation: none !important;
    min-width: auto !important;
    max-width: none !important;
    height: auto !important;
  }

  .sidebar:hover .logo-badge {
    opacity: 1;
    transform: scale(1);
    animation: badgePulse 2s infinite;
  }

  @keyframes badgePulse {
    0% {
      box-shadow: 0 0 15px rgba(139, 92, 246, 0.4);
    }
    50% {
      box-shadow: 0 0 20px rgba(139, 92, 246, 0.6);
    }
    100% {
      box-shadow: 0 0 15px rgba(139, 92, 246, 0.4);
    }
  }
  </style>
  
  <nav class="nav-menu">
    <div class="menu-label">MENU</div>
    
    <%= link_to dashboard_path, class: "nav-item active" do %>
      <i class="bi bi-columns-gap"></i>
      <span>Dashboard</span>
    <% end %>
    
    <%= link_to profile_path, class: "nav-item" do %>
      <i class="bi bi-person-badge"></i>
      <span>Profile</span>
    <% end %>
    
    <%= link_to badges_path, class: "nav-item" do %>
      <i class="bi bi-stars"></i>
      <span>Badges</span>
    <% end %>
    
    <%= link_to forum_posts_path, class: "nav-item" do %>
      <i class="bi bi-chat-square-heart"></i>
      <span>Forum</span>
    <% end %>

    <%= link_to events_index_path, class: "nav-item" do %>
      <i class="bi bi-calendar-event"></i>
      <span>Events</span>
    <% end %>

    <%= link_to positions_path, class: "nav-item" do %>
      <i class="bi bi-briefcase"></i>
      <span>Job Listings</span>
    <% end %>

    <%= link_to "#", class: "nav-item" do %>
      <i class="bi bi-file-earmark-person"></i>
      <span>CV</span>
    <% end %>
    
    <%= link_to ai_chat_path(1), class: "nav-item" do %>
      <i class="bi bi-robot"></i>
      <span>AI Chat</span>
    <% end %>

    <div class="nav-footer">
      <%= button_to destroy_user_session_path, method: :delete, class: "nav-item logout-btn" do %>
        <i class="bi bi-box-arrow-right"></i>
        <span>Logout</span>
      <% end %>
    </div>
  </nav>
</div>

<style>
/* Reset and General Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Sidebar background update */
.sidebar {
  position: fixed;
  left: 0;
  top: 0;
  width: 70px;
  height: 100vh;
  background: rgba(13, 12, 24, 0.3);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  padding: 1.5rem 0.5rem;
  border-right: 1px solid rgba(139, 92, 246, 0.1);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1000;
  overflow: hidden;
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
}

.logo {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.75rem;
  margin-bottom: 2rem;
  position: relative;
  transition: all 0.3s ease;
}

.logo::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent,
    rgba(139,92,246,0.8),
    transparent
  );
  filter: blur(1px);
  animation: glow 2s ease-in-out infinite;
}

@keyframes glow {
  0%, 100% { opacity: 0.5; }
  50% { opacity: 1; }
}

.logo i {
  font-size: 2rem;
  min-width: 32px;
  max-width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #8B5CF6;
  filter: drop-shadow(0 0 20px rgba(139, 92, 246, 0.8));
  transition: all 0.4s ease;
  animation: logoFloat 3s ease-in-out infinite;
}

@keyframes logoFloat {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-5px); }
}

.logo span {
  font-family: 'Orbitron', sans-serif;
  font-size: 1.6rem;
  font-weight: 600;
  letter-spacing: 1.2px;
  background: linear-gradient(135deg, #8B5CF6 10%, #6D28D9 50%, #4C1D95 90%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  white-space: nowrap;
  opacity: 0;
  transform: translateX(-10px);
  transition: all 0.4s ease;
  text-shadow: 
    0 0 25px rgba(139, 92, 246, 0.5),
    0 0 50px rgba(139, 92, 246, 0.3);
  position: relative;
}

.logo span::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent,
    #8B5CF6,
    transparent
  );
  opacity: 0;
  transition: opacity 0.4s ease;
}

.sidebar:hover .logo span {
  opacity: 1;
  transform: translateX(0);
  animation: textGlow 3s ease-in-out infinite;
}

.sidebar:hover .logo span::after {
  opacity: 1;
  animation: lineGlow 3s ease-in-out infinite;
}

@keyframes textGlow {
  0%, 100% {
    filter: brightness(1) drop-shadow(0 0 20px rgba(139, 92, 246, 0.4));
  }
  50% {
    filter: brightness(1.2) drop-shadow(0 0 30px rgba(139, 92, 246, 0.6));
  }
}

@keyframes lineGlow {
  0%, 100% {
    opacity: 0.5;
    transform: scaleX(0.8);
  }
  50% {
    opacity: 1;
    transform: scaleX(1);
  }
}

.sidebar:hover {
  width: 240px;
  background: rgba(13, 12, 24, 0.6);
}

.menu-label {
  padding: 0.5rem 0.75rem;
  font-size: 0.75rem;
  text-transform: uppercase;
  color: rgba(255,255,255,0.6);
  margin-bottom: 0.75rem;
  white-space: nowrap;
  opacity: 0;
  transform: translateX(-10px);
  transition: all 0.3s ease;
  position: relative;
  letter-spacing: 1px;
}

.menu-label::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0.75rem;
  width: 20px;
  height: 1px;
  background: #8B5CF6;
  transition: width 0.3s ease;
}

.sidebar:hover .menu-label::after {
  width: 50px;
}

.nav-menu {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  width: 100%;
  height: calc(100vh - 120px);
  position: relative;
}

.nav-item {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.875rem;
  color: rgba(255,255,255,0.8);
  text-decoration: none;
  border-radius: 12px;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  background: rgba(255,255,255,0.03);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  margin: 0.25rem 0;
  border: 1px solid rgba(255, 255, 255, 0.05);
  width: 100%;
}

.nav-item::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(139, 92, 246, 0.1), 
    rgba(139, 92, 246, 0.2), 
    rgba(139, 92, 246, 0.1), 
    transparent
  );
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

.nav-item:hover::before {
  transform: translateX(100%);
}

.nav-item i {
  font-size: 1.25rem;
  min-width: 24px;
  max-width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  transition: all 0.4s ease;
  position: relative;
  z-index: 1;
  filter: drop-shadow(0 0 12px rgba(139, 92, 246, 0.4));
}

.nav-item span {
  font-size: 0.95rem;
  font-weight: 500;
  opacity: 0;
  transform: translateX(-10px);
  transition: all 0.4s ease;
  position: relative;
  z-index: 1;
}

.sidebar:hover .nav-item span {
  opacity: 1;
  transform: translateX(0);
}

.nav-item:hover {
  color: #8B5CF6;
  background: rgba(139, 92, 246, 0.15);
  transform: translateX(5px) scale(1.02);
  box-shadow: 
    0 4px 20px rgba(139, 92, 246, 0.2),
    0 0 0 1px rgba(139, 92, 246, 0.2);
  border: 1px solid rgba(139, 92, 246, 0.3);
}

.nav-item:hover i {
  transform: scale(1.2) rotate(10deg);
  filter: drop-shadow(0 0 20px rgba(139, 92, 246, 0.8));
  animation: iconPulse 1.5s ease-in-out infinite;
}

@keyframes iconPulse {
  0% {
    transform: scale(1.2) rotate(10deg);
    filter: drop-shadow(0 0 20px rgba(139, 92, 246, 0.8));
  }
  50% {
    transform: scale(1.3) rotate(-5deg);
    filter: drop-shadow(0 0 30px rgba(139, 92, 246, 1));
  }
  100% {
    transform: scale(1.2) rotate(10deg);
    filter: drop-shadow(0 0 20px rgba(139, 92, 246, 0.8));
  }
}

.nav-item.active {
  background: rgba(139, 92, 246, 0.2);
  color: #8B5CF6;
  box-shadow: 
    0 4px 20px rgba(139, 92, 246, 0.3),
    0 0 0 1px rgba(139, 92, 246, 0.3);
  border: 1px solid rgba(139, 92, 246, 0.4);
  animation: activeItemPulse 3s ease-in-out infinite;
}

@keyframes activeItemPulse {
  0%, 100% {
    box-shadow: 
      0 4px 20px rgba(139, 92, 246, 0.3),
      0 0 0 1px rgba(139, 92, 246, 0.3);
  }
  50% {
    box-shadow: 
      0 4px 25px rgba(139, 92, 246, 0.4),
      0 0 0 2px rgba(139, 92, 246, 0.4);
  }
}

.nav-item.active i {
  animation: activeIconFloat 3s ease-in-out infinite;
  filter: drop-shadow(0 0 25px rgba(139, 92, 246, 1));
}

@keyframes activeIconFloat {
  0%, 100% {
    transform: translateY(0) scale(1.2);
  }
  50% {
    transform: translateY(-5px) scale(1.3);
  }
}

.nav-item:active {
  transform: scale(0.98) translateX(3px);
  transition: transform 0.1s ease;
}

/* Responsive Design */
@media (max-width: 768px) {
  .sidebar {
    width: 70px;
  }
  
  .sidebar:hover {
    width: 70px;
  }
  
  .logo span,
  .menu-label,
  .nav-item span {
    display: none;
  }
  
  .nav-item:hover {
    transform: scale(1.1);
  }
}

.nav-footer {
  margin-top: auto;
  padding-top: 1rem;
  border-top: 1px solid rgba(139, 92, 246, 0.1);
}

.logout-btn {
  width: 100%;
  background: none;
  border: none;
  cursor: pointer;
  text-align: left;
  padding: 0.875rem;
  color: rgba(255,255,255,0.8);
  border-radius: 12px;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  align-items: center;
  gap: 1rem;
  background: rgba(255,255,255,0.03);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.logout-btn:hover {
  color: #EF4444;
  background: rgba(239, 68, 68, 0.15);
  transform: translateX(5px) scale(1.02);
  box-shadow: 
    0 4px 20px rgba(239, 68, 68, 0.2),
    0 0 0 1px rgba(239, 68, 68, 0.2);
  border: 1px solid rgba(239, 68, 68, 0.3);
}

.logout-btn:hover i {
  transform: scale(1.2) rotate(10deg);
  filter: drop-shadow(0 0 20px rgba(239, 68, 68, 0.8));
  animation: logoutIconPulse 1.5s ease-in-out infinite;
}

@keyframes logoutIconPulse {
  0% {
    transform: scale(1.2) rotate(10deg);
    filter: drop-shadow(0 0 20px rgba(239, 68, 68, 0.8));
  }
  50% {
    transform: scale(1.3) rotate(-5deg);
    filter: drop-shadow(0 0 30px rgba(239, 68, 68, 1));
  }
  100% {
    transform: scale(1.2) rotate(10deg);
    filter: drop-shadow(0 0 20px rgba(239, 68, 68, 0.8));
  }
}

.logout-btn i {
  font-size: 1.25rem;
  min-width: 24px;
  max-width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  transition: all 0.4s ease;
  position: relative;
  z-index: 1;
}

.logout-btn span {
  font-size: 0.95rem;
  font-weight: 500;
  opacity: 0;
  transform: translateX(-10px);
  transition: all 0.4s ease;
}

.sidebar:hover .logout-btn span {
  opacity: 1;
  transform: translateX(0);
}
</style>

<div class="verification-container">
    <div class="verification-header">
        <h1>Badge Verification System</h1>
        <p class="subtitle">Upload your documents and start the verification process</p>
    </div>

    <div class="badge-selection-container">
        <div class="badge-select-button" onclick="toggleBadgeSelection()">
            <div class="badge-preview">
                <i class="bi bi-award"></i>
                <span id="selectedBadgeName">Select Badge</span>
            </div>
            <i class="bi bi-chevron-down"></i>
        </div>

        <div class="badge-dropdown" id="badgeDropdown">
            <div class="search-box">
                <i class="bi bi-search"></i>
                <input type="text" placeholder="Search badge..." oninput="filterBadges(this.value)">
            </div>
            <div class="badge-list">
                <% Badge.all.each do |badge| %>
                    <div class="badge-option" onclick="selectBadge('<%= badge.id %>', '<%= badge.name %>')">
                        <div class="badge-icon">
                            <i class="bi bi-award"></i>
                        </div>
                        <div class="badge-info">
                            <span class="badge-name"><%= badge.name %></span>
                            <span class="badge-issuer"><%= badge.issued_by %></span>
                        </div>
                    </div>
                <% end %>
            </div>
        </div>
    </div>

    <div class="verification-steps">
        <%= form_for @verification, html: { multipart: true, class: "upload-form" } do |f| %>
            <div class="step-card">
                <div class="step-icon">
                    <i class="bi bi-cloud-upload"></i>
                </div>
                <h3>File Upload</h3>
                <p>You can upload up to 3 PDF files</p>
                
                <%= f.hidden_field :badge_id, id: 'badge_id_field' %>
                
                <div class="upload-area" id="dropZone">
                    <%= f.file_field :files, multiple: true, accept: '.pdf', class: 'file-input', id: 'fileInput', style: 'display: none;' %>
                    <i class="bi bi-file-earmark-arrow-up"></i>
                    <span>Select File</span>
                    <small>or drag and drop</small>
                    <small class="file-limit">(Maximum 3 PDF files)</small>
                </div>
                
                <div class="selected-files" id="fileList">
                    <p>No file selected</p>
                </div>
                
                <%= f.submit 'Upload and Verify', class: 'upload-button', id: 'uploadButton', disabled: true %>
            </div>
        <% end %>

        <div class="step-card">
            <div class="step-icon">
                <i class="bi bi-hourglass-split"></i>
            </div>
            <h3>Processing</h3>
            <p>Your files are being reviewed. This process may take 10-15 minutes.</p>
            <div class="progress-indicator">
                <div class="progress-circle"></div>
            </div>
        </div>

        <div class="step-card">
            <div class="step-icon">
                <i class="bi bi-check-circle"></i>
            </div>
            <h3>Verified</h3>
            <p>Congratulations! Your documents have been successfully verified.</p>
            <button class="download-button" disabled>
                <i class="bi bi-download"></i>
                Download Certificate
            </button>
        </div>
    </div>

    <!-- Dynamic Active Applications Card -->
    <div class="active-verifications-card" id="activeVerifications">
        <div class="card-header">
            <h2>Your Active Applications</h2>
        </div>
        <div class="card-content" id="verificationsContent">
            <% if current_user.verifications.exists? %>
                <div class="verification-list">
                    <% current_user.verifications.includes(:badge).order(created_at: :desc).limit(5).each do |verification| %>
                        <div class="verification-item" data-verification-id="<%= verification.id %>">
                            <div class="badge-name">
                                <%= verification.badge.name %>
                            </div>
                            <div class="verification-meta">
                                <%= verification.created_at.strftime("%d/%m/%Y") %>
                                <div class="status-wrapper">
                                    <span class="status-dot <%= verification.status %>" 
                                          data-tooltip="<%= verification.status == 'pending' ? 'Under Review' : 'Completed' %>">
                                    </span>
                                </div>
                            </div>
                        </div>
                    <% end %>
                </div>
            <% else %>
                <div class="empty-state">
                    <p>You don't have any active applications yet.</p>
                </div>
            <% end %>
        </div>
        
        <style>
            .active-verifications-card {
                background: rgba(26, 16, 59, 0.7);
                border: 1px solid rgba(156, 39, 176, 0.3);
                border-radius: 1rem;
                padding: 2rem;
                box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
                backdrop-filter: blur(4px);
                margin-top: 3rem;
            }

            .card-header h2 {
                color: #fff;
                font-size: 1.5rem;
                margin-bottom: 1.5rem;
                font-weight: 600;
            }

            .verification-list {
                display: flex;
                flex-direction: column;
                gap: 1rem;
            }

            .verification-item {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 0.75rem;
                padding: 1rem;
                display: flex;
                justify-content: space-between;
                align-items: center;
                transition: all 0.3s ease;
            }

            .verification-item:hover {
                background: rgba(255, 255, 255, 0.1);
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            }

            .badge-name {
                color: #fff;
                font-weight: 500;
            }

            .verification-meta {
                display: flex;
                align-items: center;
                gap: 1rem;
                color: rgba(255, 255, 255, 0.7);
                font-size: 0.9rem;
            }

            .status-wrapper {
                position: relative;
            }

            .status-dot {
                width: 10px;
                height: 10px;
                border-radius: 50%;
                display: inline-block;
            }

            .status-dot.pending {
                background: #FFA726;
                box-shadow: 0 0 10px rgba(255, 167, 38, 0.5);
            }

            .status-dot.completed {
                background: #66BB6A;
                box-shadow: 0 0 10px rgba(102, 187, 106, 0.5);
            }

            .empty-state {
                text-align: center;
                color: rgba(255, 255, 255, 0.7);
                padding: 2rem;
            }

            [data-tooltip]:hover:after {
                content: attr(data-tooltip);
                position: absolute;
                bottom: 100%;
                left: 50%;
                transform: translateX(-50%);
                background: rgba(0, 0, 0, 0.8);
                color: white;
                padding: 0.5rem 1rem;
                border-radius: 0.5rem;
                font-size: 0.8rem;
                white-space: nowrap;
                z-index: 10;
            }
        </style>
    </div>
</div>

<style>
.animated-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, #040B14, #061024, #081537);
    animation: gradientAnimation 15s ease infinite;
    z-index: -1;
}

@keyframes gradientAnimation {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

.verification-container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 2rem;
}

.verification-header {
    text-align: center;
    margin-bottom: 3rem;
    color: #fff;
}

.verification-header h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    color: #fff;
}

.subtitle {
    font-size: 1.1rem;
    color: rgba(255,255,255,0.8);
}

.verification-steps {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    margin-top: 2rem;
}

.step-card {
    background: rgba(255,255,255,0.03);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.1);
    border-radius: 1rem;
    padding: 2rem;
    text-align: center;
    color: #fff;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
}

.step-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent, rgba(156, 39, 176, 0.1), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
}

.step-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 15px 35px rgba(156, 39, 176, 0.2);
    border-color: rgba(156, 39, 176, 0.3);
    background: rgba(255,255,255,0.05);
}

.step-card:hover::before {
    transform: translateX(100%);
}

.step-icon {
    width: 80px;
    height: 80px;
    margin: 0 auto 1.5rem;
    background: rgba(156, 39, 176, 0.1);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid rgba(156, 39, 176, 0.3);
    transition: all 0.4s ease;
    position: relative;
}

.step-icon::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: 2px solid transparent;
    animation: pulse 2s infinite;
}

.step-card:hover .step-icon {
    transform: scale(1.1) rotate(5deg);
    background: rgba(156, 39, 176, 0.2);
    box-shadow: 0 0 20px rgba(156, 39, 176, 0.3);
}

@keyframes pulse {
    0% {
        transform: scale(1);
        border-color: rgba(156, 39, 176, 0.3);
    }
    50% {
        transform: scale(1.2);
        border-color: rgba(156, 39, 176, 0);
    }
    100% {
        transform: scale(1);
        border-color: rgba(156, 39, 176, 0.3);
    }
}

.step-icon i {
    font-size: 2rem;
    color: #9C27B0;
}

.step-card h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
}

.step-card p {
    color: #fff;
    margin-bottom: 1.5rem;
}

.upload-area {
    background: rgba(0,0,0,0.2);
    border: 2px dashed rgba(156, 39, 176, 0.3);
    border-radius: 1rem;
    padding: 2rem;
    transition: all 0.3s ease;
}

.upload-area.drag-over {
    background: rgba(156, 39, 176, 0.1);
    border-color: #9C27B0;
}

.file-input-wrapper {
    position: relative;
    margin-bottom: 1.5rem;
}

.file-input {
    position: absolute;
    width: 0;
    height: 0;
    opacity: 0;
}

.upload-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: rgba(156, 39, 176, 0.2);
    border: 1px solid rgba(156, 39, 176, 0.3);
    border-radius: 2rem;
    color: #fff;
    cursor: pointer;
    transition: all 0.3s ease;
}

.upload-button:hover {
    background: rgba(156, 39, 176, 0.3);
    transform: translateY(-2px);
}

.file-info {
    margin-top: 1rem;
    font-size: 0.9rem;
    color: #fff;
}

.submit-button, .download-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: linear-gradient(45deg, #9C27B0, #7B1FA2);
    border: none;
    border-radius: 2rem;
    color: #fff;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.7;
}

.submit-button:not([disabled]), .download-button:not([disabled]) {
    opacity: 1;
    cursor: pointer;
}

.submit-button:not([disabled]):hover, .download-button:not([disabled]):hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(156, 39, 176, 0.3);
}

.progress-indicator {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 60px;
}

.progress-circle {
    width: 40px;
    height: 40px;
    border: 3px solid rgba(156, 39, 176, 0.3);
    border-top-color: #9C27B0;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

@media (max-width: 1024px) {
    .verification-steps {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    .verification-container {
        padding: 1rem;
    }

    .step-card {
        padding: 1.5rem;
    }
}


.popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    padding: 2rem;
    border-radius: 1rem;
    text-align: center;
    z-index: 1000;
    box-shadow: 0 8px 32px rgba(31, 38, 135, 0.2);
    animation: popupFadeIn 0.3s ease;
}

.success-popup {
    border: 1px solid rgba(76, 175, 80, 0.3);
}

.failure-popup {
    border: 1px solid rgba(244, 67, 54, 0.3);
}

.popup-content {
    color: white;
}

.success-icon {
    font-size: 4rem;
    color: #4CAF50;
    margin-bottom: 1rem;
}

.failure-icon {
    font-size: 4rem;
    color: #F44336;
    margin-bottom: 1rem;
}

@keyframes popupFadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -60%);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
}


.step-card.active {
    border-color: rgba(156, 39, 176, 0.5);
    box-shadow: 0 0 20px rgba(156, 39, 176, 0.3);
}

.step-card.completed {
    border-color: #4CAF50;
}

.step-card.completed .step-icon {
    background: rgba(76, 175, 80, 0.1);
    border-color: #4CAF50;
}

.step-card.completed .step-icon i {
    color: #4CAF50;
}

.badge-selection-container {
    max-width: 600px;
    margin: 0 auto 3rem;
    position: relative;
    padding: 0 1rem;
}

.badge-select-button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.2rem 1.5rem;
    background: rgba(17, 25, 40, 0.75);
    border: 1px solid rgba(156, 39, 176, 0.2);
    border-radius: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
}

.badge-select-button:hover {
    background: rgba(17, 25, 40, 0.85);
    border-color: rgba(156, 39, 176, 0.4);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(156, 39, 176, 0.2);
}

.badge-preview {
    display: flex;
    align-items: center;
    gap: 1rem;
    color: rgba(255, 255, 255, 0.9);
}

.badge-preview i {
    font-size: 1.5rem;
    color: #9C27B0;
    transition: all 0.3s ease;
}

.badge-select-button:hover .badge-preview i {
    transform: scale(1.1) rotate(10deg);
}

.badge-select-button .bi-chevron-down {
    font-size: 1.2rem;
    color: rgba(255, 255, 255, 0.6);
    transition: all 0.3s ease;
}

.badge-select-button:hover .bi-chevron-down {
    color: rgba(255, 255, 255, 0.9);
    transform: translateY(2px);
}

.badge-dropdown {
    position: absolute;
    top: calc(100% + 10px);
    left: 0;
    right: 0;
    background: rgba(17, 25, 40, 0.95);
    border: 1px solid rgba(156, 39, 176, 0.2);
    border-radius: 1rem;
    padding: 1.2rem;
    display: none;
    z-index: 100;
    backdrop-filter: blur(10px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    animation: dropdownFadeIn 0.3s ease;
    max-width: 100%;
    width: 100%;
}

@keyframes dropdownFadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.search-box {
    position: relative;
    margin-bottom: 1.2rem;
    width: 100%;
}

.search-box input {
    width: 100%;
    padding: 1rem 1rem 1rem 3rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(156, 39, 176, 0.2);
    border-radius: 0.8rem;
    color: #fff;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-sizing: border-box;
}

.search-box input:focus {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(156, 39, 176, 0.4);
    box-shadow: 0 0 0 3px rgba(156, 39, 176, 0.1);
    outline: none;
}

.search-box i {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: rgba(156, 39, 176, 0.6);
    font-size: 1.2rem;
    pointer-events: none;
    transition: all 0.3s ease;
}

.search-box input:focus + i {
    color: rgba(156, 39, 176, 0.8);
}

.badge-list {
    max-height: 300px;
    overflow-y: auto;
    padding-right: 0.5rem;
}

.badge-list::-webkit-scrollbar {
    width: 6px;
}

.badge-list::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 3px;
}

.badge-list::-webkit-scrollbar-thumb {
    background: rgba(156, 39, 176, 0.3);
    border-radius: 3px;
}

.badge-list::-webkit-scrollbar-thumb:hover {
    background: rgba(156, 39, 176, 0.5);
}

.badge-option {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    cursor: pointer;
    border-radius: 0.8rem;
    transition: all 0.3s ease;
    border: 1px solid transparent;
}

.badge-option:hover {
    background: rgba(156, 39, 176, 0.1);
    border-color: rgba(156, 39, 176, 0.2);
    transform: translateX(5px);
}

.badge-icon {
    width: 45px;
    height: 45px;
    background: rgba(156, 39, 176, 0.1);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.badge-option:hover .badge-icon {
    transform: scale(1.1);
    background: rgba(156, 39, 176, 0.2);
}

.badge-icon i {
    font-size: 1.3rem;
    color: #9C27B0;
    transition: all 0.3s ease;
}

.badge-option:hover .badge-icon i {
    transform: rotate(10deg);
}

.badge-info {
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
}

.badge-name {
    color: #fff;
    font-weight: 500;
    font-size: 1.1rem;
}

.badge-issuer {
    color: rgba(255, 255, 255, 0.5);
    font-size: 0.9rem;
}

.verification-steps {
    display: grid;
    gap: 2rem;
    margin-top: 3rem;
}

.step-card {
    background: rgba(17, 25, 40, 0.75);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 1.5rem;
    padding: 2rem;
    text-align: center;
    backdrop-filter: blur(10px);
}

.step-icon {
    width: 60px;
    height: 60px;
    background: rgba(156, 39, 176, 0.1);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1.5rem;
}

.step-icon i {
    font-size: 1.8rem;
    color: #9C27B0;
}

.step-card h3 {
    color: #fff;
    font-size: 1.3rem;
    margin-bottom: 0.5rem;
}

.step-card p {
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 1.5rem;
}

.upload-area {
    border: 2px dashed rgba(156, 39, 176, 0.3);
    border-radius: 1rem;
    padding: 2rem;
    margin-bottom: 1.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.upload-area:hover {
    border-color: #9C27B0;
    background: rgba(156, 39, 176, 0.05);
}

.upload-area i {
    font-size: 2rem;
    color: #9C27B0;
    margin-bottom: 1rem;
}

.upload-area span {
    display: block;
    color: #fff;
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
}

.upload-area small {
    color: rgba(255, 255, 255, 0.5);
}

.selected-files {
    text-align: left;
    margin: 1.5rem 0;
    color: rgba(255, 255, 255, 0.7);
}

.upload-button {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 2rem;
    background: linear-gradient(45deg, #9C27B0, #673AB7);
    border: none;
    border-radius: 1rem;
    color: white;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.upload-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(156, 39, 176, 0.3);
}

@media (max-width: 768px) {
    .verification-container {
        padding: 1rem;
    }

    .verification-header h1 {
        font-size: 2rem;
    }

    .step-card {
        padding: 1.5rem;
    }

    .badge-selection-container {
        padding: 0 0.5rem;
    }
    
    .badge-dropdown {
        left: 0;
        right: 0;
        width: 100%;
    }
    
    .search-box input {
        font-size: 0.9rem;
        padding: 0.8rem 0.8rem 0.8rem 2.5rem;
    }
}

.file-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.8rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 0.5rem;
    margin-bottom: 0.5rem;
}

.file-item i {
    color: #9C27B0;
    font-size: 1.2rem;
}

.file-item span {
    flex: 1;
    color: rgba(255, 255, 255, 0.9);
}

.remove-file {
    background: none;
    border: none;
    color: rgba(255, 255, 255, 0.5);
    cursor: pointer;
    padding: 0.3rem;
    border-radius: 50%;
    transition: all 0.3s ease;
}

.remove-file:hover {
    color: #ff4444;
    background: rgba(255, 68, 68, 0.1);
}

.error-message {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.8rem;
    background: rgba(255, 68, 68, 0.1);
    border: 1px solid rgba(255, 68, 68, 0.2);
    border-radius: 0.5rem;
    color: #ff4444;
    margin-bottom: 1rem;
    animation: fadeIn 0.3s ease;
}

.error-message i {
    font-size: 1.2rem;
}

.file-limit {
    display: block;
    margin-top: 0.5rem;
    color: rgba(255, 255, 255, 0.4);
    font-size: 0.85rem;
}

.drag-over {
    border-color: #9C27B0;
    background: rgba(156, 39, 176, 0.1);
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

.spin {
    animation: spin 1s linear infinite;
}

#uploadButton:disabled {
    opacity: 0.7;
    cursor: not-allowed;
}

.upload-button .spin {
    display: inline-block;
    margin-right: 0.5rem;
}

.success-popup,
.error-popup {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(17, 25, 40, 0.95);
  border-radius: 1rem;
  padding: 2rem;
  text-align: center;
  z-index: 1000;
  display: none;
  animation: popupFadeIn 0.3s ease;
  backdrop-filter: blur(10px);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
}

.success-popup {
  border: 1px solid rgba(76, 175, 80, 0.3);
}

.error-popup {
  border: 1px solid rgba(244, 67, 54, 0.3);
}

.success-popup.show,
.error-popup.show {
  display: block;
}

.popup-content {
  color: white;
}

.popup-content i {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.success-popup i {
  color: #4CAF50;
}

.error-popup i {
  color: #F44336;
}

.popup-content h3 {
  margin-bottom: 0.5rem;
  font-size: 1.5rem;
}

@keyframes popupFadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, -60%);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
}



</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const dropZone = document.getElementById('dropZone');
    const fileInput = document.getElementById('fileInput');
    const fileList = document.getElementById('fileList');
    const uploadButton = document.getElementById('uploadButton');
    const badgeIdField = document.getElementById('badge_id_field');
    let selectedFiles = [];

    function updateUploadButton() {
        const hasBadge = badgeIdField.value !== '';
        const hasFiles = selectedFiles.length > 0;
        uploadButton.disabled = !hasBadge || !hasFiles;
    }

    
    if (badgeIdField) {
        badgeIdField.addEventListener('change', updateUploadButton);
    }

    
    dropZone.addEventListener('click', () => {
        fileInput.click();
    });

    
    fileInput.addEventListener('change', (e) => {
        const files = Array.from(e.target.files);
        if (files.length > 0) {
            handleFiles(files);
        }
    });

    
    dropZone.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropZone.classList.add('drag-over');
    });

    dropZone.addEventListener('dragleave', () => {
        dropZone.classList.remove('drag-over');
    });

    dropZone.addEventListener('drop', (e) => {
        e.preventDefault();
        dropZone.classList.remove('drag-over');
        const files = Array.from(e.dataTransfer.files);
        if (files.length > 0) {
            handleFiles(files);
        }
    });

    function handleFiles(files) {
        
        const pdfFiles = files.filter(file => 
            file.type === 'application/pdf' || 
            file.name.toLowerCase().endsWith('.pdf')
        );
        
        
        if (selectedFiles.length + pdfFiles.length > 3) {
            showError('En fazla 3 dosya yükleyebilirsiniz!');
            return;
        }

        
        if (pdfFiles.length < files.length) {
            showError('Sadece PDF dosyaları yükleyebilirsiniz!');
        }

        
        selectedFiles = [...selectedFiles, ...pdfFiles].slice(0, 3);
        
        
        const dataTransfer = new DataTransfer();
        selectedFiles.forEach(file => {
            dataTransfer.items.add(file);
        });
        fileInput.files = dataTransfer.files;
        
        updateFileList();
        updateUploadButton();
    }

    function updateFileList() {
        if (selectedFiles.length === 0) {
            fileList.innerHTML = '<p>Seçilen dosya yok</p>';
            return;
        }

        fileList.innerHTML = selectedFiles.map((file, index) => `
            <div class="file-item">
                <i class="bi bi-file-pdf"></i>
                <span>${file.name}</span>
                <button type="button" onclick="removeFile(${index})" class="remove-file">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        `).join('');
    }

    function updateUploadButton() {
        uploadButton.disabled = selectedFiles.length === 0;
    }

    window.removeFile = function(index) {
        selectedFiles.splice(index, 1);
        
        
        const dataTransfer = new DataTransfer();
        selectedFiles.forEach(file => {
            dataTransfer.items.add(file);
        });
        fileInput.files = dataTransfer.files;
        
        updateFileList();
        updateUploadButton();
    }

    function showError(message) {
        const errorDiv = document.createElement('div');
        errorDiv.className = 'error-message';
        errorDiv.innerHTML = `
            <i class="bi bi-exclamation-circle"></i>
            <span>${message}</span>
        `;
        fileList.insertBefore(errorDiv, fileList.firstChild);
        
        setTimeout(() => {
            errorDiv.remove();
        }, 3000);
    }

    
    document.querySelector('.upload-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const badgeId = document.getElementById('badge_id_field').value;
        if (!badgeId || badgeId === '') {
            showError('Lütfen bir rozet seçin');
            return false;
        }
        if (selectedFiles.length === 0) {
            showError('Lütfen en az bir dosya seçin');
            return false;
        }

        const formData = new FormData(this);
        
        const uploadButton = document.getElementById('uploadButton');
        const originalButtonText = uploadButton.innerHTML;
        uploadButton.disabled = true;
        uploadButton.innerHTML = '<i class="bi bi-arrow-repeat spin"></i> Yükleniyor...';

        fetch(this.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
            },
            credentials: 'same-origin'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const successPopup = document.createElement('div');
                successPopup.className = 'success-popup show';
                successPopup.innerHTML = `
                    <div class="popup-content">
                        <i class="bi bi-check-circle-fill"></i>
                        <h3>Başarılı!</h3>
                        <p>${data.success}</p>
                    </div>
                `;
                document.body.appendChild(successPopup);

                this.reset();
                selectedFiles = [];
                updateFileList();
                document.getElementById('selectedBadgeName').textContent = 'Rozet Seçin';
                document.getElementById('badge_id_field').value = '';

                setTimeout(() => {
                    successPopup.classList.remove('show');
                    setTimeout(() => {
                        successPopup.remove();
                    }, 300);
                }, 2000);
            } else if (data.error) {
                const errorPopup = document.createElement('div');
                errorPopup.className = 'error-popup show';
                errorPopup.innerHTML = `
                    <div class="popup-content">
                        <i class="bi bi-x-circle-fill"></i>
                        <h3>Hata!</h3>
                        <p>${data.error}</p>
                    </div>
                `;
                document.body.appendChild(errorPopup);

                setTimeout(() => {
                    errorPopup.classList.remove('show');
                    setTimeout(() => {
                        errorPopup.remove();
                    }, 300);
                }, 2000);
            }
        })
        .catch(error => {
            showError('Bir hata oluştu. Lütfen tekrar deneyin.');
        })
        .finally(() => {
            uploadButton.disabled = false;
            uploadButton.innerHTML = originalButtonText;
        });

        return false;
    });
});

function toggleBadgeSelection() {
    const dropdown = document.getElementById('badgeDropdown');
    dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
}

function selectBadge(id, name) {
    document.getElementById('selectedBadgeName').textContent = name;
    document.getElementById('badgeDropdown').style.display = 'none';
    const badgeIdField = document.getElementById('badge_id_field');
    badgeIdField.value = id;
    
    
    const uploadButton = document.getElementById('uploadButton');
    const fileInput = document.getElementById('fileInput');
    uploadButton.disabled = !(id && fileInput.files.length > 0);
}

function filterBadges(query) {
    const badges = document.querySelectorAll('.badge-option');
    badges.forEach(badge => {
        const name = badge.querySelector('.badge-name').textContent.toLowerCase();
        const issuer = badge.querySelector('.badge-issuer').textContent.toLowerCase();
        const matches = name.includes(query.toLowerCase()) || issuer.includes(query.toLowerCase());
        badge.style.display = matches ? 'flex' : 'none';
    });
}


document.addEventListener('click', (e) => {
    const dropdown = document.getElementById('badgeDropdown');
    const button = document.querySelector('.badge-select-button');
    if (!button.contains(e.target) && !dropdown.contains(e.target)) {
        dropdown.style.display = 'none';
    }
});


function updateVerifications() {
    fetch('/verifications/active', {
        headers: {
            'Accept': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        credentials: 'same-origin'
    })
    .then(response => response.json())
    .then(data => {
        const container = document.getElementById('verificationsContent');
        if (data.verifications && data.verifications.length > 0) {
            const verificationsList = data.verifications.map(verification => `
                <div class="verification-item" data-verification-id="${verification.id}">
                    <div class="badge-name">
                        ${verification.badge_name}
                    </div>
                    <div class="verification-meta">
                        ${new Date(verification.created_at).toLocaleDateString('tr-TR')}
                        <div class="status-wrapper">
                            <span class="status-dot ${verification.status}" 
                                  data-tooltip="${verification.status === 'pending' ? 'İnceleniyor' : 'Tamamlandı'}">
                            </span>
                        </div>
                    </div>
                </div>
            `).join('');
            
            container.innerHTML = `<div class="verification-list">${verificationsList}</div>`;
        } else {
            container.innerHTML = `
                <div class="empty-state">
                    <p>Henüz aktif başvurunuz bulunmamaktadır.</p>
                </div>
            `;
        }
    })
    .catch(error => console.error('Başvurular güncellenirken hata oluştu:', error));
}


document.addEventListener('DOMContentLoaded', () => {
    updateVerifications();
    setInterval(updateVerifications, 30000);
});


document.querySelector('.upload-form').addEventListener('submit', function(e) {
    const originalSubmit = e.target.onsubmit;
    e.target.onsubmit = async function(e) {
        await originalSubmit(e);
        updateVerifications();
    };
});
</script>
